name: Build PDF Splitter

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Allow GITHUB_TOKEN to have write permission
permissions: write-all

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        pip install tkinter
        pip install pillow
        pip install pymupdf
        pip install pypdf2
        echo "Installed packages:"
        pip list
        
    - name: Debug Python environment
      run: |
        python -c "import sys; print('Python version:', sys.version)"
        python -c "import tkinter; print('Tkinter version:', tkinter.TkVersion)"
        python -c "from PIL import Image; print('Pillow version:', Image.__version__)"
        python -c "import fitz; print('PyMuPDF version:', fitz.__version__)"
        
    - name: Generate spec file
      run: |
        echo "Generating spec file..."
        pyi-makespec --name="PDFSplitter" --noconsole --onefile --hidden-import=tkinter --hidden-import=PIL --hidden-import=PyPDF2 --hidden-import=fitz --hidden-import=json --hidden-import=os --hidden-import=sys --hidden-import=re --hidden-import=shutil --hidden-import=tempfile --hidden-import=threading --hidden-import=queue --hidden-import=time pdf_splitter_tkinter_new.py
        echo "Generated spec file contents:"
        type PDFSplitter.spec
        
    - name: Build with PyInstaller
      run: |
        echo "Current directory:"
        dir
        echo "Building exe..."
        pyinstaller --clean --log-level DEBUG PDFSplitter.spec
        echo "Build complete, checking dist directory:"
        dir dist
        
    - name: Verify and rename exe file
      shell: cmd
      run: |
        echo "Listing workspace directory:"
        dir
        echo "Listing dist directory:"
        dir dist
        echo "Checking build directory:"
        dir build
        IF NOT EXIST "dist\PDFSplitter.exe" (
          echo Error: EXE file not found!
          type build\PDFSplitter\warn-PDFSplitter.txt
          exit /b 1
        )
        ren "dist\PDFSplitter.exe" "PDF分割工具.exe"
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/PDF分割工具.exe
        asset_name: PDF分割工具.exe
        asset_content_type: application/octet-stream 